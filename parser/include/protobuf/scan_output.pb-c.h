/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protobuf/scan_output.proto */

#ifndef PROTOBUF_C_protobuf_2fscan_5foutput_2eproto__INCLUDED
#define PROTOBUF_C_protobuf_2fscan_5foutput_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _PgQuery__ScanToken PgQuery__ScanToken;
typedef struct _PgQuery__ScanOutput PgQuery__ScanOutput;


/* --- enums --- */

typedef enum _PgQuery__KeywordKind {
  PG_QUERY__KEYWORD_KIND__NO_KEYWORD = 0,
  PG_QUERY__KEYWORD_KIND__UNRESERVED_KEYWORD = 1,
  PG_QUERY__KEYWORD_KIND__COL_NAME_KEYWORD = 2,
  PG_QUERY__KEYWORD_KIND__TYPE_FUNC_NAME_KEYWORD = 3,
  PG_QUERY__KEYWORD_KIND__RESERVED_KEYWORD = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PG_QUERY__KEYWORD_KIND)
} PgQuery__KeywordKind;
typedef enum _PgQuery__Token {
  PG_QUERY__TOKEN__NUL = 0,
  /*
   * Single-character tokens that are returned 1:1 (identical with "self" list in scan.l)
   * Either supporting syntax, or single-character operators (some can be both)
   * Also see https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-SYNTAX-SPECIAL-CHARS
   */
  /*
   * "%"
   */
  PG_QUERY__TOKEN__ASCII_37 = 37,
  /*
   * "("
   */
  PG_QUERY__TOKEN__ASCII_40 = 40,
  /*
   * ")"
   */
  PG_QUERY__TOKEN__ASCII_41 = 41,
  /*
   * "*"
   */
  PG_QUERY__TOKEN__ASCII_42 = 42,
  /*
   * "+"
   */
  PG_QUERY__TOKEN__ASCII_43 = 43,
  /*
   * ","
   */
  PG_QUERY__TOKEN__ASCII_44 = 44,
  /*
   * "-"
   */
  PG_QUERY__TOKEN__ASCII_45 = 45,
  /*
   * "."
   */
  PG_QUERY__TOKEN__ASCII_46 = 46,
  /*
   * "/"
   */
  PG_QUERY__TOKEN__ASCII_47 = 47,
  /*
   * ":"
   */
  PG_QUERY__TOKEN__ASCII_58 = 58,
  /*
   * ";"
   */
  PG_QUERY__TOKEN__ASCII_59 = 59,
  /*
   * "<"
   */
  PG_QUERY__TOKEN__ASCII_60 = 60,
  /*
   * "="
   */
  PG_QUERY__TOKEN__ASCII_61 = 61,
  /*
   * ">"
   */
  PG_QUERY__TOKEN__ASCII_62 = 62,
  /*
   * "?"
   */
  PG_QUERY__TOKEN__ASCII_63 = 63,
  /*
   * "["
   */
  PG_QUERY__TOKEN__ASCII_91 = 91,
  /*
   * "]"
   */
  PG_QUERY__TOKEN__ASCII_93 = 93,
  /*
   * "^"
   */
  PG_QUERY__TOKEN__ASCII_94 = 94,
  /*
   * Named tokens in scan.l
   */
  PG_QUERY__TOKEN__IDENT = 258,
  PG_QUERY__TOKEN__FCONST = 259,
  PG_QUERY__TOKEN__SCONST = 260,
  PG_QUERY__TOKEN__BCONST = 261,
  PG_QUERY__TOKEN__XCONST = 262,
  PG_QUERY__TOKEN__Op = 263,
  PG_QUERY__TOKEN__ICONST = 264,
  PG_QUERY__TOKEN__PARAM = 265,
  PG_QUERY__TOKEN__TYPECAST = 266,
  PG_QUERY__TOKEN__DOT_DOT = 267,
  PG_QUERY__TOKEN__COLON_EQUALS = 268,
  PG_QUERY__TOKEN__EQUALS_GREATER = 269,
  PG_QUERY__TOKEN__LESS_EQUALS = 270,
  PG_QUERY__TOKEN__GREATER_EQUALS = 271,
  PG_QUERY__TOKEN__NOT_EQUALS = 272,
  PG_QUERY__TOKEN__SQL_COMMENT = 273,
  PG_QUERY__TOKEN__C_COMMENT = 274,
  PG_QUERY__TOKEN__ABORT_P = 275,
  PG_QUERY__TOKEN__ABSOLUTE_P = 276,
  PG_QUERY__TOKEN__ACCESS = 277,
  PG_QUERY__TOKEN__ACTION = 278,
  PG_QUERY__TOKEN__ADD_P = 279,
  PG_QUERY__TOKEN__ADMIN = 280,
  PG_QUERY__TOKEN__AFTER = 281,
  PG_QUERY__TOKEN__AGGREGATE = 282,
  PG_QUERY__TOKEN__ALL = 283,
  PG_QUERY__TOKEN__ALSO = 284,
  PG_QUERY__TOKEN__ALTER = 285,
  PG_QUERY__TOKEN__ALWAYS = 286,
  PG_QUERY__TOKEN__ANALYSE = 287,
  PG_QUERY__TOKEN__ANALYZE = 288,
  PG_QUERY__TOKEN__AND = 289,
  PG_QUERY__TOKEN__ANY = 290,
  PG_QUERY__TOKEN__ARRAY = 291,
  PG_QUERY__TOKEN__AS = 292,
  PG_QUERY__TOKEN__ASC = 293,
  PG_QUERY__TOKEN__ASSERTION = 294,
  PG_QUERY__TOKEN__ASSIGNMENT = 295,
  PG_QUERY__TOKEN__ASYMMETRIC = 296,
  PG_QUERY__TOKEN__AT = 297,
  PG_QUERY__TOKEN__ATTACH = 298,
  PG_QUERY__TOKEN__ATTRIBUTE = 299,
  PG_QUERY__TOKEN__AUTHORIZATION = 300,
  PG_QUERY__TOKEN__BACKWARD = 301,
  PG_QUERY__TOKEN__BEFORE = 302,
  PG_QUERY__TOKEN__BEGIN_P = 303,
  PG_QUERY__TOKEN__BETWEEN = 304,
  PG_QUERY__TOKEN__BIGINT = 305,
  PG_QUERY__TOKEN__BINARY = 306,
  PG_QUERY__TOKEN__BIT = 307,
  PG_QUERY__TOKEN__BOOLEAN_P = 308,
  PG_QUERY__TOKEN__BOTH = 309,
  PG_QUERY__TOKEN__BY = 310,
  PG_QUERY__TOKEN__CACHE = 311,
  PG_QUERY__TOKEN__CALL = 312,
  PG_QUERY__TOKEN__CALLED = 313,
  PG_QUERY__TOKEN__CASCADE = 314,
  PG_QUERY__TOKEN__CASCADED = 315,
  PG_QUERY__TOKEN__CASE = 316,
  PG_QUERY__TOKEN__CAST = 317,
  PG_QUERY__TOKEN__CATALOG_P = 318,
  PG_QUERY__TOKEN__CHAIN = 319,
  PG_QUERY__TOKEN__CHAR_P = 320,
  PG_QUERY__TOKEN__CHARACTER = 321,
  PG_QUERY__TOKEN__CHARACTERISTICS = 322,
  PG_QUERY__TOKEN__CHECK = 323,
  PG_QUERY__TOKEN__CHECKPOINT = 324,
  PG_QUERY__TOKEN__CLASS = 325,
  PG_QUERY__TOKEN__CLOSE = 326,
  PG_QUERY__TOKEN__CLUSTER = 327,
  PG_QUERY__TOKEN__COALESCE = 328,
  PG_QUERY__TOKEN__COLLATE = 329,
  PG_QUERY__TOKEN__COLLATION = 330,
  PG_QUERY__TOKEN__COLUMN = 331,
  PG_QUERY__TOKEN__COLUMNS = 332,
  PG_QUERY__TOKEN__COMMENT = 333,
  PG_QUERY__TOKEN__COMMENTS = 334,
  PG_QUERY__TOKEN__COMMIT = 335,
  PG_QUERY__TOKEN__COMMITTED = 336,
  PG_QUERY__TOKEN__CONCURRENTLY = 337,
  PG_QUERY__TOKEN__CONFIGURATION = 338,
  PG_QUERY__TOKEN__CONFLICT = 339,
  PG_QUERY__TOKEN__CONNECTION = 340,
  PG_QUERY__TOKEN__CONSTRAINT = 341,
  PG_QUERY__TOKEN__CONSTRAINTS = 342,
  PG_QUERY__TOKEN__CONTENT_P = 343,
  PG_QUERY__TOKEN__CONTINUE_P = 344,
  PG_QUERY__TOKEN__CONVERSION_P = 345,
  PG_QUERY__TOKEN__COPY = 346,
  PG_QUERY__TOKEN__COST = 347,
  PG_QUERY__TOKEN__CREATE = 348,
  PG_QUERY__TOKEN__CROSS = 349,
  PG_QUERY__TOKEN__CSV = 350,
  PG_QUERY__TOKEN__CUBE = 351,
  PG_QUERY__TOKEN__CURRENT_P = 352,
  PG_QUERY__TOKEN__CURRENT_CATALOG = 353,
  PG_QUERY__TOKEN__CURRENT_DATE = 354,
  PG_QUERY__TOKEN__CURRENT_ROLE = 355,
  PG_QUERY__TOKEN__CURRENT_SCHEMA = 356,
  PG_QUERY__TOKEN__CURRENT_TIME = 357,
  PG_QUERY__TOKEN__CURRENT_TIMESTAMP = 358,
  PG_QUERY__TOKEN__CURRENT_USER = 359,
  PG_QUERY__TOKEN__CURSOR = 360,
  PG_QUERY__TOKEN__CYCLE = 361,
  PG_QUERY__TOKEN__DATA_P = 362,
  PG_QUERY__TOKEN__DATABASE = 363,
  PG_QUERY__TOKEN__DAY_P = 364,
  PG_QUERY__TOKEN__DEALLOCATE = 365,
  PG_QUERY__TOKEN__DEC = 366,
  PG_QUERY__TOKEN__DECIMAL_P = 367,
  PG_QUERY__TOKEN__DECLARE = 368,
  PG_QUERY__TOKEN__DEFAULT = 369,
  PG_QUERY__TOKEN__DEFAULTS = 370,
  PG_QUERY__TOKEN__DEFERRABLE = 371,
  PG_QUERY__TOKEN__DEFERRED = 372,
  PG_QUERY__TOKEN__DEFINER = 373,
  PG_QUERY__TOKEN__DELETE_P = 374,
  PG_QUERY__TOKEN__DELIMITER = 375,
  PG_QUERY__TOKEN__DELIMITERS = 376,
  PG_QUERY__TOKEN__DEPENDS = 377,
  PG_QUERY__TOKEN__DESC = 378,
  PG_QUERY__TOKEN__DETACH = 379,
  PG_QUERY__TOKEN__DICTIONARY = 380,
  PG_QUERY__TOKEN__DISABLE_P = 381,
  PG_QUERY__TOKEN__DISCARD = 382,
  PG_QUERY__TOKEN__DISTINCT = 383,
  PG_QUERY__TOKEN__DO = 384,
  PG_QUERY__TOKEN__DOCUMENT_P = 385,
  PG_QUERY__TOKEN__DOMAIN_P = 386,
  PG_QUERY__TOKEN__DOUBLE_P = 387,
  PG_QUERY__TOKEN__DROP = 388,
  PG_QUERY__TOKEN__EACH = 389,
  PG_QUERY__TOKEN__ELSE = 390,
  PG_QUERY__TOKEN__ENABLE_P = 391,
  PG_QUERY__TOKEN__ENCODING = 392,
  PG_QUERY__TOKEN__ENCRYPTED = 393,
  PG_QUERY__TOKEN__END_P = 394,
  PG_QUERY__TOKEN__ENUM_P = 395,
  PG_QUERY__TOKEN__ESCAPE = 396,
  PG_QUERY__TOKEN__EVENT = 397,
  PG_QUERY__TOKEN__EXCEPT = 398,
  PG_QUERY__TOKEN__EXCLUDE = 399,
  PG_QUERY__TOKEN__EXCLUDING = 400,
  PG_QUERY__TOKEN__EXCLUSIVE = 401,
  PG_QUERY__TOKEN__EXECUTE = 402,
  PG_QUERY__TOKEN__EXISTS = 403,
  PG_QUERY__TOKEN__EXPLAIN = 404,
  PG_QUERY__TOKEN__EXTENSION = 405,
  PG_QUERY__TOKEN__EXTERNAL = 406,
  PG_QUERY__TOKEN__EXTRACT = 407,
  PG_QUERY__TOKEN__FALSE_P = 408,
  PG_QUERY__TOKEN__FAMILY = 409,
  PG_QUERY__TOKEN__FETCH = 410,
  PG_QUERY__TOKEN__FILTER = 411,
  PG_QUERY__TOKEN__FIRST_P = 412,
  PG_QUERY__TOKEN__FLOAT_P = 413,
  PG_QUERY__TOKEN__FOLLOWING = 414,
  PG_QUERY__TOKEN__FOR = 415,
  PG_QUERY__TOKEN__FORCE = 416,
  PG_QUERY__TOKEN__FOREIGN = 417,
  PG_QUERY__TOKEN__FORWARD = 418,
  PG_QUERY__TOKEN__FREEZE = 419,
  PG_QUERY__TOKEN__FROM = 420,
  PG_QUERY__TOKEN__FULL = 421,
  PG_QUERY__TOKEN__FUNCTION = 422,
  PG_QUERY__TOKEN__FUNCTIONS = 423,
  PG_QUERY__TOKEN__GENERATED = 424,
  PG_QUERY__TOKEN__GLOBAL = 425,
  PG_QUERY__TOKEN__GRANT = 426,
  PG_QUERY__TOKEN__GRANTED = 427,
  PG_QUERY__TOKEN__GREATEST = 428,
  PG_QUERY__TOKEN__GROUP_P = 429,
  PG_QUERY__TOKEN__GROUPING = 430,
  PG_QUERY__TOKEN__GROUPS = 431,
  PG_QUERY__TOKEN__HANDLER = 432,
  PG_QUERY__TOKEN__HAVING = 433,
  PG_QUERY__TOKEN__HEADER_P = 434,
  PG_QUERY__TOKEN__HOLD = 435,
  PG_QUERY__TOKEN__HOUR_P = 436,
  PG_QUERY__TOKEN__IDENTITY_P = 437,
  PG_QUERY__TOKEN__IF_P = 438,
  PG_QUERY__TOKEN__ILIKE = 439,
  PG_QUERY__TOKEN__IMMEDIATE = 440,
  PG_QUERY__TOKEN__IMMUTABLE = 441,
  PG_QUERY__TOKEN__IMPLICIT_P = 442,
  PG_QUERY__TOKEN__IMPORT_P = 443,
  PG_QUERY__TOKEN__IN_P = 444,
  PG_QUERY__TOKEN__INCLUDE = 445,
  PG_QUERY__TOKEN__INCLUDING = 446,
  PG_QUERY__TOKEN__INCREMENT = 447,
  PG_QUERY__TOKEN__INDEX = 448,
  PG_QUERY__TOKEN__INDEXES = 449,
  PG_QUERY__TOKEN__INHERIT = 450,
  PG_QUERY__TOKEN__INHERITS = 451,
  PG_QUERY__TOKEN__INITIALLY = 452,
  PG_QUERY__TOKEN__INLINE_P = 453,
  PG_QUERY__TOKEN__INNER_P = 454,
  PG_QUERY__TOKEN__INOUT = 455,
  PG_QUERY__TOKEN__INPUT_P = 456,
  PG_QUERY__TOKEN__INSENSITIVE = 457,
  PG_QUERY__TOKEN__INSERT = 458,
  PG_QUERY__TOKEN__INSTEAD = 459,
  PG_QUERY__TOKEN__INT_P = 460,
  PG_QUERY__TOKEN__INTEGER = 461,
  PG_QUERY__TOKEN__INTERSECT = 462,
  PG_QUERY__TOKEN__INTERVAL = 463,
  PG_QUERY__TOKEN__INTO = 464,
  PG_QUERY__TOKEN__INVOKER = 465,
  PG_QUERY__TOKEN__IS = 466,
  PG_QUERY__TOKEN__ISNULL = 467,
  PG_QUERY__TOKEN__ISOLATION = 468,
  PG_QUERY__TOKEN__JOIN = 469,
  PG_QUERY__TOKEN__KEY = 470,
  PG_QUERY__TOKEN__LABEL = 471,
  PG_QUERY__TOKEN__LANGUAGE = 472,
  PG_QUERY__TOKEN__LARGE_P = 473,
  PG_QUERY__TOKEN__LAST_P = 474,
  PG_QUERY__TOKEN__LATERAL_P = 475,
  PG_QUERY__TOKEN__LEADING = 476,
  PG_QUERY__TOKEN__LEAKPROOF = 477,
  PG_QUERY__TOKEN__LEAST = 478,
  PG_QUERY__TOKEN__LEFT = 479,
  PG_QUERY__TOKEN__LEVEL = 480,
  PG_QUERY__TOKEN__LIKE = 481,
  PG_QUERY__TOKEN__LIMIT = 482,
  PG_QUERY__TOKEN__LISTEN = 483,
  PG_QUERY__TOKEN__LOAD = 484,
  PG_QUERY__TOKEN__LOCAL = 485,
  PG_QUERY__TOKEN__LOCALTIME = 486,
  PG_QUERY__TOKEN__LOCALTIMESTAMP = 487,
  PG_QUERY__TOKEN__LOCATION = 488,
  PG_QUERY__TOKEN__LOCK_P = 489,
  PG_QUERY__TOKEN__LOCKED = 490,
  PG_QUERY__TOKEN__LOGGED = 491,
  PG_QUERY__TOKEN__MAPPING = 492,
  PG_QUERY__TOKEN__MATCH = 493,
  PG_QUERY__TOKEN__MATERIALIZED = 494,
  PG_QUERY__TOKEN__MAXVALUE = 495,
  PG_QUERY__TOKEN__METHOD = 496,
  PG_QUERY__TOKEN__MINUTE_P = 497,
  PG_QUERY__TOKEN__MINVALUE = 498,
  PG_QUERY__TOKEN__MODE = 499,
  PG_QUERY__TOKEN__MONTH_P = 500,
  PG_QUERY__TOKEN__MOVE = 501,
  PG_QUERY__TOKEN__NAME_P = 502,
  PG_QUERY__TOKEN__NAMES = 503,
  PG_QUERY__TOKEN__NATIONAL = 504,
  PG_QUERY__TOKEN__NATURAL = 505,
  PG_QUERY__TOKEN__NCHAR = 506,
  PG_QUERY__TOKEN__NEW = 507,
  PG_QUERY__TOKEN__NEXT = 508,
  PG_QUERY__TOKEN__NO = 509,
  PG_QUERY__TOKEN__NONE = 510,
  PG_QUERY__TOKEN__NOT = 511,
  PG_QUERY__TOKEN__NOTHING = 512,
  PG_QUERY__TOKEN__NOTIFY = 513,
  PG_QUERY__TOKEN__NOTNULL = 514,
  PG_QUERY__TOKEN__NOWAIT = 515,
  PG_QUERY__TOKEN__NULL_P = 516,
  PG_QUERY__TOKEN__NULLIF = 517,
  PG_QUERY__TOKEN__NULLS_P = 518,
  PG_QUERY__TOKEN__NUMERIC = 519,
  PG_QUERY__TOKEN__OBJECT_P = 520,
  PG_QUERY__TOKEN__OF = 521,
  PG_QUERY__TOKEN__OFF = 522,
  PG_QUERY__TOKEN__OFFSET = 523,
  PG_QUERY__TOKEN__OIDS = 524,
  PG_QUERY__TOKEN__OLD = 525,
  PG_QUERY__TOKEN__ON = 526,
  PG_QUERY__TOKEN__ONLY = 527,
  PG_QUERY__TOKEN__OPERATOR = 528,
  PG_QUERY__TOKEN__OPTION = 529,
  PG_QUERY__TOKEN__OPTIONS = 530,
  PG_QUERY__TOKEN__OR = 531,
  PG_QUERY__TOKEN__ORDER = 532,
  PG_QUERY__TOKEN__ORDINALITY = 533,
  PG_QUERY__TOKEN__OTHERS = 534,
  PG_QUERY__TOKEN__OUT_P = 535,
  PG_QUERY__TOKEN__OUTER_P = 536,
  PG_QUERY__TOKEN__OVER = 537,
  PG_QUERY__TOKEN__OVERLAPS = 538,
  PG_QUERY__TOKEN__OVERLAY = 539,
  PG_QUERY__TOKEN__OVERRIDING = 540,
  PG_QUERY__TOKEN__OWNED = 541,
  PG_QUERY__TOKEN__OWNER = 542,
  PG_QUERY__TOKEN__PARALLEL = 543,
  PG_QUERY__TOKEN__PARSER = 544,
  PG_QUERY__TOKEN__PARTIAL = 545,
  PG_QUERY__TOKEN__PARTITION = 546,
  PG_QUERY__TOKEN__PASSING = 547,
  PG_QUERY__TOKEN__PASSWORD = 548,
  PG_QUERY__TOKEN__PLACING = 549,
  PG_QUERY__TOKEN__PLANS = 550,
  PG_QUERY__TOKEN__POLICY = 551,
  PG_QUERY__TOKEN__POSITION = 552,
  PG_QUERY__TOKEN__PRECEDING = 553,
  PG_QUERY__TOKEN__PRECISION = 554,
  PG_QUERY__TOKEN__PRESERVE = 555,
  PG_QUERY__TOKEN__PREPARE = 556,
  PG_QUERY__TOKEN__PREPARED = 557,
  PG_QUERY__TOKEN__PRIMARY = 558,
  PG_QUERY__TOKEN__PRIOR = 559,
  PG_QUERY__TOKEN__PRIVILEGES = 560,
  PG_QUERY__TOKEN__PROCEDURAL = 561,
  PG_QUERY__TOKEN__PROCEDURE = 562,
  PG_QUERY__TOKEN__PROCEDURES = 563,
  PG_QUERY__TOKEN__PROGRAM = 564,
  PG_QUERY__TOKEN__PUBLICATION = 565,
  PG_QUERY__TOKEN__QUOTE = 566,
  PG_QUERY__TOKEN__RANGE = 567,
  PG_QUERY__TOKEN__READ = 568,
  PG_QUERY__TOKEN__REAL = 569,
  PG_QUERY__TOKEN__REASSIGN = 570,
  PG_QUERY__TOKEN__RECHECK = 571,
  PG_QUERY__TOKEN__RECURSIVE = 572,
  PG_QUERY__TOKEN__REF = 573,
  PG_QUERY__TOKEN__REFERENCES = 574,
  PG_QUERY__TOKEN__REFERENCING = 575,
  PG_QUERY__TOKEN__REFRESH = 576,
  PG_QUERY__TOKEN__REINDEX = 577,
  PG_QUERY__TOKEN__RELATIVE_P = 578,
  PG_QUERY__TOKEN__RELEASE = 579,
  PG_QUERY__TOKEN__RENAME = 580,
  PG_QUERY__TOKEN__REPEATABLE = 581,
  PG_QUERY__TOKEN__REPLACE = 582,
  PG_QUERY__TOKEN__REPLICA = 583,
  PG_QUERY__TOKEN__RESET = 584,
  PG_QUERY__TOKEN__RESTART = 585,
  PG_QUERY__TOKEN__RESTRICT = 586,
  PG_QUERY__TOKEN__RETURNING = 587,
  PG_QUERY__TOKEN__RETURNS = 588,
  PG_QUERY__TOKEN__REVOKE = 589,
  PG_QUERY__TOKEN__RIGHT = 590,
  PG_QUERY__TOKEN__ROLE = 591,
  PG_QUERY__TOKEN__ROLLBACK = 592,
  PG_QUERY__TOKEN__ROLLUP = 593,
  PG_QUERY__TOKEN__ROUTINE = 594,
  PG_QUERY__TOKEN__ROUTINES = 595,
  PG_QUERY__TOKEN__ROW = 596,
  PG_QUERY__TOKEN__ROWS = 597,
  PG_QUERY__TOKEN__RULE = 598,
  PG_QUERY__TOKEN__SAVEPOINT = 599,
  PG_QUERY__TOKEN__SCHEMA = 600,
  PG_QUERY__TOKEN__SCHEMAS = 601,
  PG_QUERY__TOKEN__SCROLL = 602,
  PG_QUERY__TOKEN__SEARCH = 603,
  PG_QUERY__TOKEN__SECOND_P = 604,
  PG_QUERY__TOKEN__SECURITY = 605,
  PG_QUERY__TOKEN__SELECT = 606,
  PG_QUERY__TOKEN__SEQUENCE = 607,
  PG_QUERY__TOKEN__SEQUENCES = 608,
  PG_QUERY__TOKEN__SERIALIZABLE = 609,
  PG_QUERY__TOKEN__SERVER = 610,
  PG_QUERY__TOKEN__SESSION = 611,
  PG_QUERY__TOKEN__SESSION_USER = 612,
  PG_QUERY__TOKEN__SET = 613,
  PG_QUERY__TOKEN__SETS = 614,
  PG_QUERY__TOKEN__SETOF = 615,
  PG_QUERY__TOKEN__SHARE = 616,
  PG_QUERY__TOKEN__SHOW = 617,
  PG_QUERY__TOKEN__SIMILAR = 618,
  PG_QUERY__TOKEN__SIMPLE = 619,
  PG_QUERY__TOKEN__SKIP = 620,
  PG_QUERY__TOKEN__SMALLINT = 621,
  PG_QUERY__TOKEN__SNAPSHOT = 622,
  PG_QUERY__TOKEN__SOME = 623,
  PG_QUERY__TOKEN__SQL_P = 624,
  PG_QUERY__TOKEN__STABLE = 625,
  PG_QUERY__TOKEN__STANDALONE_P = 626,
  PG_QUERY__TOKEN__START = 627,
  PG_QUERY__TOKEN__STATEMENT = 628,
  PG_QUERY__TOKEN__STATISTICS = 629,
  PG_QUERY__TOKEN__STDIN = 630,
  PG_QUERY__TOKEN__STDOUT = 631,
  PG_QUERY__TOKEN__STORAGE = 632,
  PG_QUERY__TOKEN__STORED = 633,
  PG_QUERY__TOKEN__STRICT_P = 634,
  PG_QUERY__TOKEN__STRIP_P = 635,
  PG_QUERY__TOKEN__SUBSCRIPTION = 636,
  PG_QUERY__TOKEN__SUBSTRING = 637,
  PG_QUERY__TOKEN__SUPPORT = 638,
  PG_QUERY__TOKEN__SYMMETRIC = 639,
  PG_QUERY__TOKEN__SYSID = 640,
  PG_QUERY__TOKEN__SYSTEM_P = 641,
  PG_QUERY__TOKEN__TABLE = 642,
  PG_QUERY__TOKEN__TABLES = 643,
  PG_QUERY__TOKEN__TABLESAMPLE = 644,
  PG_QUERY__TOKEN__TABLESPACE = 645,
  PG_QUERY__TOKEN__TEMP = 646,
  PG_QUERY__TOKEN__TEMPLATE = 647,
  PG_QUERY__TOKEN__TEMPORARY = 648,
  PG_QUERY__TOKEN__TEXT_P = 649,
  PG_QUERY__TOKEN__THEN = 650,
  PG_QUERY__TOKEN__TIES = 651,
  PG_QUERY__TOKEN__TIME = 652,
  PG_QUERY__TOKEN__TIMESTAMP = 653,
  PG_QUERY__TOKEN__TO = 654,
  PG_QUERY__TOKEN__TRAILING = 655,
  PG_QUERY__TOKEN__TRANSACTION = 656,
  PG_QUERY__TOKEN__TRANSFORM = 657,
  PG_QUERY__TOKEN__TREAT = 658,
  PG_QUERY__TOKEN__TRIGGER = 659,
  PG_QUERY__TOKEN__TRIM = 660,
  PG_QUERY__TOKEN__TRUE_P = 661,
  PG_QUERY__TOKEN__TRUNCATE = 662,
  PG_QUERY__TOKEN__TRUSTED = 663,
  PG_QUERY__TOKEN__TYPE_P = 664,
  PG_QUERY__TOKEN__TYPES_P = 665,
  PG_QUERY__TOKEN__UNBOUNDED = 666,
  PG_QUERY__TOKEN__UNCOMMITTED = 667,
  PG_QUERY__TOKEN__UNENCRYPTED = 668,
  PG_QUERY__TOKEN__UNION = 669,
  PG_QUERY__TOKEN__UNIQUE = 670,
  PG_QUERY__TOKEN__UNKNOWN = 671,
  PG_QUERY__TOKEN__UNLISTEN = 672,
  PG_QUERY__TOKEN__UNLOGGED = 673,
  PG_QUERY__TOKEN__UNTIL = 674,
  PG_QUERY__TOKEN__UPDATE = 675,
  PG_QUERY__TOKEN__USER = 676,
  PG_QUERY__TOKEN__USING = 677,
  PG_QUERY__TOKEN__VACUUM = 678,
  PG_QUERY__TOKEN__VALID = 679,
  PG_QUERY__TOKEN__VALIDATE = 680,
  PG_QUERY__TOKEN__VALIDATOR = 681,
  PG_QUERY__TOKEN__VALUE_P = 682,
  PG_QUERY__TOKEN__VALUES = 683,
  PG_QUERY__TOKEN__VARCHAR = 684,
  PG_QUERY__TOKEN__VARIADIC = 685,
  PG_QUERY__TOKEN__VARYING = 686,
  PG_QUERY__TOKEN__VERBOSE = 687,
  PG_QUERY__TOKEN__VERSION_P = 688,
  PG_QUERY__TOKEN__VIEW = 689,
  PG_QUERY__TOKEN__VIEWS = 690,
  PG_QUERY__TOKEN__VOLATILE = 691,
  PG_QUERY__TOKEN__WHEN = 692,
  PG_QUERY__TOKEN__WHERE = 693,
  PG_QUERY__TOKEN__WHITESPACE_P = 694,
  PG_QUERY__TOKEN__WINDOW = 695,
  PG_QUERY__TOKEN__WITH = 696,
  PG_QUERY__TOKEN__WITHIN = 697,
  PG_QUERY__TOKEN__WITHOUT = 698,
  PG_QUERY__TOKEN__WORK = 699,
  PG_QUERY__TOKEN__WRAPPER = 700,
  PG_QUERY__TOKEN__WRITE = 701,
  PG_QUERY__TOKEN__XML_P = 702,
  PG_QUERY__TOKEN__XMLATTRIBUTES = 703,
  PG_QUERY__TOKEN__XMLCONCAT = 704,
  PG_QUERY__TOKEN__XMLELEMENT = 705,
  PG_QUERY__TOKEN__XMLEXISTS = 706,
  PG_QUERY__TOKEN__XMLFOREST = 707,
  PG_QUERY__TOKEN__XMLNAMESPACES = 708,
  PG_QUERY__TOKEN__XMLPARSE = 709,
  PG_QUERY__TOKEN__XMLPI = 710,
  PG_QUERY__TOKEN__XMLROOT = 711,
  PG_QUERY__TOKEN__XMLSERIALIZE = 712,
  PG_QUERY__TOKEN__XMLTABLE = 713,
  PG_QUERY__TOKEN__YEAR_P = 714,
  PG_QUERY__TOKEN__YES_P = 715,
  PG_QUERY__TOKEN__ZONE = 716,
  PG_QUERY__TOKEN__NOT_LA = 717,
  PG_QUERY__TOKEN__NULLS_LA = 718,
  PG_QUERY__TOKEN__WITH_LA = 719,
  PG_QUERY__TOKEN__POSTFIXOP = 720,
  PG_QUERY__TOKEN__UMINUS = 721
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PG_QUERY__TOKEN)
} PgQuery__Token;

/* --- messages --- */

struct  _PgQuery__ScanToken
{
  ProtobufCMessage base;
  int32_t start;
  int32_t end;
  PgQuery__Token token;
  PgQuery__KeywordKind keyword_kind;
};
#define PG_QUERY__SCAN_TOKEN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pg_query__scan_token__descriptor) \
    , 0, 0, PG_QUERY__TOKEN__NUL, PG_QUERY__KEYWORD_KIND__NO_KEYWORD }


struct  _PgQuery__ScanOutput
{
  ProtobufCMessage base;
  size_t n_tokens;
  PgQuery__ScanToken **tokens;
};
#define PG_QUERY__SCAN_OUTPUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pg_query__scan_output__descriptor) \
    , 0,NULL }


/* PgQuery__ScanToken methods */
void   pg_query__scan_token__init
                     (PgQuery__ScanToken         *message);
size_t pg_query__scan_token__get_packed_size
                     (const PgQuery__ScanToken   *message);
size_t pg_query__scan_token__pack
                     (const PgQuery__ScanToken   *message,
                      uint8_t             *out);
size_t pg_query__scan_token__pack_to_buffer
                     (const PgQuery__ScanToken   *message,
                      ProtobufCBuffer     *buffer);
PgQuery__ScanToken *
       pg_query__scan_token__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pg_query__scan_token__free_unpacked
                     (PgQuery__ScanToken *message,
                      ProtobufCAllocator *allocator);
/* PgQuery__ScanOutput methods */
void   pg_query__scan_output__init
                     (PgQuery__ScanOutput         *message);
size_t pg_query__scan_output__get_packed_size
                     (const PgQuery__ScanOutput   *message);
size_t pg_query__scan_output__pack
                     (const PgQuery__ScanOutput   *message,
                      uint8_t             *out);
size_t pg_query__scan_output__pack_to_buffer
                     (const PgQuery__ScanOutput   *message,
                      ProtobufCBuffer     *buffer);
PgQuery__ScanOutput *
       pg_query__scan_output__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pg_query__scan_output__free_unpacked
                     (PgQuery__ScanOutput *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PgQuery__ScanToken_Closure)
                 (const PgQuery__ScanToken *message,
                  void *closure_data);
typedef void (*PgQuery__ScanOutput_Closure)
                 (const PgQuery__ScanOutput *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    pg_query__keyword_kind__descriptor;
extern const ProtobufCEnumDescriptor    pg_query__token__descriptor;
extern const ProtobufCMessageDescriptor pg_query__scan_token__descriptor;
extern const ProtobufCMessageDescriptor pg_query__scan_output__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protobuf_2fscan_5foutput_2eproto__INCLUDED */
